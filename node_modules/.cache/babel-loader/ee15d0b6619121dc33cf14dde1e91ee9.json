{"ast":null,"code":"import _classCallCheck from \"/Users/pc/Desktop/Weather-App/weatherapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pc/Desktop/Weather-App/weatherapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pc/Desktop/Weather-App/weatherapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pc/Desktop/Weather-App/weatherapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pc/Desktop/Weather-App/weatherapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pc/Desktop/Weather-App/weatherapp/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Weatherpic from './Weatherpic';\nimport Button from './Button';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.componentDidMount = function () {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        var _position$coords = position.coords,\n            latitude = _position$coords.latitude,\n            longitude = _position$coords.longitude;\n\n        _this.getWeather(latitude, longitude);\n      });\n    };\n\n    _this.getWeather = function (latitude, longitude) {\n      var API_KEY = \"3de6162d3745365b168ade2bbe4e1d66\";\n      var api = \"http://api.openweathermap.org/data/2.5/weather?lat=\".concat(latitude, \"&lon=\").concat(longitude, \"&appid=\").concat(API_KEY);\n      fetch(api).then(function (response) {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\"Error \".concat(response.status, \" is \").concat(response.statusText));\n          throw error;\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this.setState({\n          locationName: data.name,\n          fara: data.main.temp,\n          weatherDescription: data.weather[0].description,\n          IsLoaded: false,\n          displayingCelcius: false\n        });\n      }).catch(function (error) {\n        alert(\"Data could not be fetched \".concat(error.message));\n      });\n    };\n\n    _this.convertFToC = function (tempInF) {\n      return (tempInF - 32) * 5 / 9;\n    };\n\n    _this.state = {\n      items: {},\n      IsLoaded: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          locationName = _this$state.locationName,\n          fara = _this$state.fara,\n          weatherDescription = _this$state.weatherDescription,\n          IsLoaded = _this$state.IsLoaded,\n          displayingCelcius = _this$state.displayingCelcius;\n      return IsLoaded ? React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Loading....\") : React.createElement(\"div\", {\n        className: \"d-flex flex-column align-items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"text-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Weather App\"), React.createElement(\"h3\", {\n        className: \"col-12 text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, locationName), React.createElement(\"h3\", {\n        className: \"col-12 text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, displayingCelcius ? this.convertFToC(fara) : fara), React.createElement(\"h3\", {\n        className: \"col-12 text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, weatherDescription), React.createElement(Weatherpic, {\n        temperature: temperature,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(Button, {\n        title: \"convert\",\n        onClick: function onClick() {\n          _this2.setState({\n            displayingCelcius: !displayingCelcius\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/pc/Desktop/Weather-App/weatherapp/src/App.js"],"names":["React","Component","Weatherpic","Button","App","componentDidMount","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","getWeather","API_KEY","api","fetch","then","response","ok","error","Error","status","statusText","json","data","setState","locationName","name","fara","main","temp","weatherDescription","weather","description","IsLoaded","displayingCelcius","catch","alert","message","convertFToC","tempInF","state","items","temperature"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Weatherpic from './Weatherpic';\nimport Button from './Button';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n        items: {},\n        IsLoaded:true,\n        \n    };\n}\n\n\ncomponentDidMount = () => {\n  navigator.geolocation.getCurrentPosition(position => {\n    const { latitude, longitude } = position.coords;\n    this.getWeather(latitude, longitude);\n  });\n};\n\n\ngetWeather = (latitude, longitude) => {\n  const API_KEY = \"3de6162d3745365b168ade2bbe4e1d66\";\n  const api = `http://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${API_KEY}`;\n  fetch(api)\n    .then(response => {\n      if (response.ok) {\n        return response\n      }\n      else { \n        let error = new Error(`Error ${response.status} is ${response.statusText}`);\n        throw error;\n      }\n     })\n    .then(response => response.json())\n    .then(data => {\n      this.setState({\n        locationName: data.name,\n        fara: data.main.temp,\n        weatherDescription: data.weather[0].description,\n        IsLoaded: false,\n        displayingCelcius: false\n      });\n    })\n    .catch(error => { \n      alert(`Data could not be fetched ${error.message}`)\n    });\n};\n\nconvertFToC = (tempInF) => {\n  return (tempInF - 32) * 5/9;\n}\n\n  render() {\n\n    const { locationName, fara, weatherDescription, IsLoaded, displayingCelcius} = this.state;\n    \n    return (\n      IsLoaded ? (<h1>Loading....</h1>):\n        (<div className=\"d-flex flex-column align-items-center\">\n        <h1 className=\"text-success\">Weather App</h1>\n              <h3 className=\"col-12 text-danger\">{locationName}</h3>\n              <h3 className=\"col-12 text-danger\">{displayingCelcius ? this.convertFToC(fara) : fara}</h3>\n              \n              <h3 className=\"col-12 text-danger\">{weatherDescription}</h3>\n              <Weatherpic temperature= {temperature}/>\n              <Button title= \"convert\" onClick={() => {\n                this.setState({\n                  displayingCelcius: !displayingCelcius\n                })\n              }} />\n              </div> )\n    )\n    }\n  }\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}